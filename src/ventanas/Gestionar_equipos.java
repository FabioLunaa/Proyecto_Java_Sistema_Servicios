package ventanas;

import java.sql.*;
import clases.Conexion;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

public class Gestionar_equipos extends javax.swing.JFrame {

    String user;
//esta var. nos permitirá enviar datos entre interfaces y consultar un cliente en especifico.
    public static int IDequipo_update = 0;
//model nos ayuda a hacer clic en algun ciente de la bd y a modificarlo.
    DefaultTableModel model = new DefaultTableModel();

    public Gestionar_equipos() {
        initComponents();
        user = Login.user;

        setTitle("Gestion de equipo - Sesion de " + user);
        setSize(660, 450);
        setResizable(false);
        setLocationRelativeTo(null);
        
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        

        ImageIcon wallpaper = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(jLabel_Wallpaper.getWidth(),
                jLabel_Wallpaper.getHeight(), Image.SCALE_DEFAULT));
        jLabel_Wallpaper.setIcon(icono);
        this.repaint();
        //usamos try Catch cuando trabajamos con bd.
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select id_equipo, tipo_equipo, marca, estatus from equipos");
            ResultSet rs = pst.executeQuery();

            jTable_equipos = new JTable(model);
            jScrollPane_equipos.setViewportView(jTable_equipos);

            model.addColumn(" ");//agregamos estos nomb. a las columnas
            model.addColumn("Tipo");
            model.addColumn("Marca");
            model.addColumn("Estatus");

            //usamos un while para q llene las 5 columnas con los datos de la BD.
            while (rs.next()) {
                Object[] fila = new Object[4];
                for (int i = 0; i < 4; i++) {
                    fila[i] = rs.getObject(i + 1);//obtenemos el Objeto y completamos la fila.
                }
                model.addRow(fila);//agregamos las filas a la tabla.
            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al llenar tabla.");
        }
        //A este metod. lo creamos al final de las lineas de codigo, ya q nos sirve para obtener datos de la tabla.
        ObtenerDatosTabla();

    }

    @Override
    public Image getIconImage() {
//luego de crear el metodo lo programamos, creamos un ob. y obtenemos la imagen del icono a colocar en interfaz.
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;//se o si hay q hacer el retorno del objeto.
/*de igual forma debemos ir a JFrame, clic derecho y propiedades, IconImage clic en ..., value from existing component,
        property, Iconimage, ok ok*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_footer = new javax.swing.JLabel();
        jScrollPane_equipos = new javax.swing.JScrollPane();
        jTable_equipos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton_mostrar = new javax.swing.JButton();
        cmb_estados = new javax.swing.JComboBox<>();
        jLabel_Wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_footer.setText("Creado por Luna Fabio M.");
        getContentPane().add(jLabel_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 350, -1, -1));

        jTable_equipos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane_equipos.setViewportView(jTable_equipos);

        getContentPane().add(jScrollPane_equipos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 630, 180));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Registrar equipos");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        jButton_mostrar.setBackground(new java.awt.Color(153, 153, 255));
        jButton_mostrar.setFont(new java.awt.Font("Arial Narrow", 0, 24)); // NOI18N
        jButton_mostrar.setForeground(new java.awt.Color(255, 255, 255));
        jButton_mostrar.setText("Mostrar");
        jButton_mostrar.setBorder(null);
        jButton_mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_mostrarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_mostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 280, 200, 35));

        cmb_estados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "En revisión", "Reparado", "No reparado", "Entregado" }));
        getContentPane().add(cmb_estados, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 50, -1, -1));
        getContentPane().add(jLabel_Wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 660, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_mostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_mostrarActionPerformed
    //var. para guardar las selecciones del cmb
        String seleccion = cmb_estados.getSelectedItem().toString();
        String query = "";//var para guardar informacacion de la consulta.
    //modif de las columnas, en este caso se borra o limpian las columnas/filas.
        model.setColumnCount(0);
        model.setRowCount(0); 
        
        try {
            Connection cn = Conexion.conectar();
    //con este if hacemos una new consulta a la bd y q la consulta se guarde en la var query
            if (seleccion.equalsIgnoreCase("Todos")) {
                 query = "select id_equipo, id_cliente, marca, estatus from equipos";
            } else {
                query = "select id_equipo, id_cliente, marca, estatus from equipos where estatus = '" + seleccion +"'";
               
            }
    //como ya tenemos la consulta a la bd solo colocamos la var query entre ().
            PreparedStatement pst = cn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();

            jTable_equipos = new JTable(model);
            jScrollPane_equipos.setViewportView(jTable_equipos);

            model.addColumn(" ");
            model.addColumn("Tipo");
            model.addColumn("Marca");
            model.addColumn("Estatus");

            while (rs.next()) {
                Object[] fila = new Object[4];
                for (int i = 0; i < 4; i++) {
                    fila[i] = rs.getObject(i + 1);
                            
                }
                model.addRow(fila);
            }
            cn.close();
        } catch (SQLException e) {
            System.err.println("Error al recuperar los registros de equipo" + e);
        }
    //metod. q nos permite interactuar con el mause y hacer clic dond queremos hacer la consulta.
        ObtenerDatosTabla();
    }//GEN-LAST:event_jButton_mostrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gestionar_equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gestionar_equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gestionar_equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gestionar_equipos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gestionar_equipos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_estados;
    private javax.swing.JButton jButton_RegistrarEquipo;
    private javax.swing.JButton jButton_RegistrarEquipo1;
    private javax.swing.JButton jButton_mostrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel_Wallpaper;
    private javax.swing.JLabel jLabel_footer;
    private javax.swing.JScrollPane jScrollPane_equipos;
    private javax.swing.JTable jTable_equipos;
    // End of variables declaration//GEN-END:variables

//creamos un metod. para q la linea de cod. no tenga errores, si o si debe estar adentro de un metodo.
//a este metodo lo usuaremos dentro del contructor para mandarlo a llamar las veces q querramos.    
    public void ObtenerDatosTabla() {
        //activamos el mouse con el clic.
        jTable_equipos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = jTable_equipos.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    IDequipo_update = (int) model.getValueAt(fila_point, columna_point);

                   Informacion_Equipo_Tecnico info = new Informacion_Equipo_Tecnico();
                   info.setVisible(true);
                           
                }
            }
        });
    }
}
